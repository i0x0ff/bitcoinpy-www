<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>buidl on BitcoinPy</title><link>https://bitcoinpy.dev/docs/buidl/</link><description>Recent content in buidl on BitcoinPy</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://bitcoinpy.dev/docs/buidl/index.xml" rel="self" type="application/rss+xml"/><item><title>P2WPKH address</title><link>https://bitcoinpy.dev/docs/buidl/p2wpkh/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bitcoinpy.dev/docs/buidl/p2wpkh/</guid><description>Generate address 1import hashlib 2 3from buidl.ecc import PrivateKey, Signature 4from buidl.helper import decode_base58, big_endian_to_int 5from buidl.bech32 import decode_bech32, encode_bech32_checksum 6from buidl.script import P2PKHScriptPubKey, RedeemScript, WitnessScript, P2WPKHScriptPubKey 7from buidl.tx import Tx, TxIn, TxOut 8 9h = hashlib.sha256(b&amp;#39;correct horse battery staple&amp;#39;).digest() 10private_key = PrivateKey(secret=big_endian_to_int(h), network=&amp;#34;signet&amp;#34;) 11address = private_key.point.bech32_address(&amp;#34;signet&amp;#34;) 12print(&amp;#39;Address:&amp;#39;, str(address)) 13# outputs: Address: tb1q08alc0e5ua69scxhvyma568nvguqccrvl7rkgx Spend from address Assuming the previously generated address has received funds, we can spend them. In order to spend them, we'll need information about the transaction id (txid) and a vector of an output (vout).</description></item><item><title>P2WSH address (multisig)</title><link>https://bitcoinpy.dev/docs/buidl/p2wsh-multisig/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bitcoinpy.dev/docs/buidl/p2wsh-multisig/</guid><description>The example for 1-of-1 should only serve as an example. We don't recommend using it in the real world because it is not its intention. Instead of 1-of-1 use P2PKH! Generate address (1-of-1) 1import hashlib 2 3from buidl.ecc import PrivateKey, Signature 4from buidl.helper import decode_base58, big_endian_to_int 5from buidl.bech32 import decode_bech32, encode_bech32_checksum 6from buidl.script import P2PKHScriptPubKey, RedeemScript, WitnessScript, P2WPKHScriptPubKey 7from buidl.tx import Tx, TxIn, TxOut 8from buidl.witness import Witness 9 10h = hashlib.</description></item><item><title>P2PKH address</title><link>https://bitcoinpy.dev/docs/buidl/p2pkh/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bitcoinpy.dev/docs/buidl/p2pkh/</guid><description>Generate address 1import hashlib 2 3from buidl.ecc import PrivateKey, Signature 4from buidl.bech32 import decode_bech32 5from buidl.helper import decode_base58, big_endian_to_int 6from buidl.script import P2PKHScriptPubKey, RedeemScript, WitnessScript, P2WPKHScriptPubKey 7from buidl.tx import Tx, TxIn, TxOut 8 9h = hashlib.sha256(b&amp;#39;correct horse battery staple&amp;#39;).digest() 10private_key = PrivateKey(secret=big_endian_to_int(h), network=&amp;#34;signet&amp;#34;) 11address = private_key.point.address(network=&amp;#34;signet&amp;#34;) 12print(&amp;#39;Address:&amp;#39;, str(address)) 13# outputs: Address: mrdwvWkma2D6n9mGsbtkazedQQuoksnqJV Spend from address Assuming the previously generated address has received funds, we can spend them. In order to spend them, we'll need information about the transaction id (txid) and a vector of an output (vout).</description></item><item><title>P2SH address (multisig)</title><link>https://bitcoinpy.dev/docs/buidl/p2sh-multisig/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bitcoinpy.dev/docs/buidl/p2sh-multisig/</guid><description>The example for 1-of-1 should only serve as an example. We don't recommend using it in the real world because it is not its intention. Instead of 1-of-1 use P2PKH! Generate address (1-of-1) 1import hashlib 2 3from buidl.ecc import PrivateKey, Signature 4from buidl.bech32 import decode_bech32 5from buidl.helper import decode_base58, big_endian_to_int, SIGHASH_ALL, int_to_byte 6from buidl.script import P2PKHScriptPubKey, RedeemScript, Script, P2WPKHScriptPubKey 7from buidl.tx import Tx, TxIn, TxOut 8 9h = hashlib.</description></item><item><title>P2TR address</title><link>https://bitcoinpy.dev/docs/buidl/p2tr/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bitcoinpy.dev/docs/buidl/p2tr/</guid><description>todo</description></item></channel></rss>