<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python-bitcoinlib on BitcoinPy</title><link>https://bitcoinpy.dev/docs/python-bitcoinlib/</link><description>Recent content in python-bitcoinlib on BitcoinPy</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://bitcoinpy.dev/docs/python-bitcoinlib/index.xml" rel="self" type="application/rss+xml"/><item><title>P2WPKH address</title><link>https://bitcoinpy.dev/docs/python-bitcoinlib/p2wpkh/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bitcoinpy.dev/docs/python-bitcoinlib/p2wpkh/</guid><description>Generate address 1import hashlib 2 3from bitcoin import SelectParams 4from bitcoin.core import b2x, b2lx, lx, COIN, COutPoint, CTxOut, CTxIn, CTxInWitness, CTxWitness, CScriptWitness, CMutableTransaction, Hash160 5from bitcoin.core.script import CScript, OP_0, OP_CHECKSIG, SignatureHash, SIGHASH_ALL, SIGVERSION_WITNESS_V0 6from bitcoin.wallet import CBitcoinSecret, P2WPKHBitcoinAddress, CBitcoinAddress 7from bitcoin.rpc import Proxy 8 9SelectParams(&amp;#34;regtest&amp;#34;) 10 11 12# Create the (in)famous correct brainwallet secret key. 13h = hashlib.sha256(b&amp;#39;correct horse battery staple&amp;#39;).digest() 14seckey = CBitcoinSecret.from_secret_bytes(h) 15 16public_key = seckey.pub 17script_pubkey = CScript([OP_0, Hash160(public_key)]) 18address = P2WPKHBitcoinAddress.</description></item><item><title>P2WSH address (multisig)</title><link>https://bitcoinpy.dev/docs/python-bitcoinlib/p2wsh-multisig/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bitcoinpy.dev/docs/python-bitcoinlib/p2wsh-multisig/</guid><description>The example for 1-of-1 should only serve as an example. We don't recommend using it in the real world because it is not its intention. Instead of 1-of-1 use P2PKH! Generate address (1-of-1) 1import hashlib 2 3from bitcoin import SelectParams 4from bitcoin.core import b2x, lx, COIN, COutPoint, CMutableTxOut, CMutableTxIn, CMutableTransaction, CTxInWitness, CTxWitness 5from bitcoin.core.script import CScript, CScriptWitness, OP_0, OP_CHECKSIG, SignatureHash, SIGHASH_ALL, SIGVERSION_WITNESS_V0 6from bitcoin.wallet import CBitcoinSecret, CBitcoinAddress, P2WSHBitcoinAddress 7 8# We&amp;#39;ll be using regtest throughout this guide 9SelectParams(&amp;#34;regtest&amp;#34;) 10 11# Create the (in)famous correct brainwallet secret key.</description></item><item><title>P2PKH address</title><link>https://bitcoinpy.dev/docs/python-bitcoinlib/p2pkh/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bitcoinpy.dev/docs/python-bitcoinlib/p2pkh/</guid><description>Generate address 1import hashlib 2 3from bitcoin import SelectParams 4from bitcoin.core import b2x, lx, COIN, COutPoint, CMutableTxOut, CMutableTxIn, CMutableTransaction, Hash160 5from bitcoin.core.script import CScript, OP_DUP, OP_HASH160, OP_EQUALVERIFY, OP_CHECKSIG, SignatureHash, SIGHASH_ALL 6from bitcoin.core.scripteval import VerifyScript, SCRIPT_VERIFY_P2SH 7from bitcoin.wallet import CBitcoinAddress, CBitcoinSecret, P2PKHBitcoinAddress 8 9SelectParams(&amp;#39;regtest&amp;#39;) 10 11# Create the (in)famous correct brainwallet secret key. 12h = hashlib.sha256(b&amp;#39;correct horse battery staple&amp;#39;).digest() 13seckey = CBitcoinSecret.from_secret_bytes(h) 14 15# Create a redeemScript used to unlock bitcoins 16redeem_script = CScript([OP_DUP, OP_HASH160, Hash160(seckey.</description></item><item><title>P2SH address (multisig)</title><link>https://bitcoinpy.dev/docs/python-bitcoinlib/p2sh-multisig/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bitcoinpy.dev/docs/python-bitcoinlib/p2sh-multisig/</guid><description>The example for 1-of-1 should only serve as an example. We don't recommend using it in the real world because it is not its intention. Instead of 1-of-1 use P2PKH! Generate address (1-of-1) 1import hashlib 2 3from bitcoin import SelectParams 4from bitcoin.core import b2x, lx, COIN, COutPoint, CMutableTxOut, CMutableTxIn, CMutableTransaction, Hash160 5from bitcoin.core.script import CScript, OP_DUP, OP_HASH160, OP_EQUALVERIFY, OP_CHECKSIG, SignatureHash, SIGHASH_ALL 6from bitcoin.core.scripteval import VerifyScript, SCRIPT_VERIFY_P2SH 7from bitcoin.wallet import CBitcoinAddress, CBitcoinSecret 8 9SelectParams(&amp;#39;regtest&amp;#39;) 10 11# Create the (in)famous correct brainwallet secret key.</description></item><item><title>P2TR address</title><link>https://bitcoinpy.dev/docs/python-bitcoinlib/p2tr/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bitcoinpy.dev/docs/python-bitcoinlib/p2tr/</guid><description>python-bitcoinlib currently does not support Taproot. Github Issue is open here.</description></item></channel></rss>